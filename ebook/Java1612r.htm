<!--
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<title>Java1612r</title>
<style type="text/css">
a:link {color:#0000ff;}
a:visited {color:#cc00cc;}
a:active {color:#ff0000;}
p{color:black;}
h1{color:green}
h2{color: purple}
h3{color: gray}
b{color: #000000}
strong{color: #000000}
blockquote{color: purple}
ul{color: maroon}
ol{color: maroon}
table{border: 1px solid black}
th{border: 1px solid black}
a:hover {
	color: #cc0000;
	font-weight: bold;
	text-decoration: none;
}
.auto-style1 {
	text-align: center;
}
div.a {
  border: 2px solid black;
}
.auto-style2 {
	color: #000000;
}
</style>
</head>

<body style="font-family: Arial,Helvetica,sans-serif;font-size: 12pt; background-color: #FEFFF0;"
>

<h1 class="auto-style1">Java1612r Review: Runtime Polymorphism through Class Inheritance</h1>


<h1 class="style1">Table of Contents</h1>
<ul>
	<li><a href="#Preface">Preface</a></li>
	<li><a href="#Questions">Questions</a>
	<ul>
		<li><a href="#question01">1</a>, <a href="#question02">2</a>,
		<a href="#question03">3</a>, <a href="#question04">4</a>,
		<a href="#question05">5</a></li>
	</ul>
	</li>
	<li><a href="#Figures">Figures</a></li>
	<li><a href="#Listings">Listings</a></li>
	<li><a href="#Answers">Answers</a></li>
	<li><a href="#Miscellaneous">Miscellaneous</a></li>
</ul>
<h1><a name="Preface">Preface</a></h1>
<p>This chapter contains review questions and answers keyed to the chapter titled 
<em>Java1612: Runtime Polymorphism through Class Inheritance.</em></p>
<p>The questions and the answers are connected by hyperlinks to make it easy for 
you to navigate from the question to the answer and back again.</p>
<h1><a name="Questions">Questions</a></h1>

<h2><a name="question01">Question 1</a><b>. </b> </h2>
<p>True or False? Overridden methods must have the same name and same formal 
argument list<span class="auto-style2"><a href="#answer01"> </a> as the methods 
that they override but may have the same or a different return type.</span></p>
<p><a href="#answer01">Answer 1</a> </p>

<h2><a name="question02">Question 2</a></h2>
<p>True or False? Overloaded methods must have the same name, same return type, 
but different formal argument lists than the methods that they overload.</p>
<p><a href="#answer02">Answer 2</a> </p>

<h2><a name="question03">Question 3</a> </h2>
<p>True or False? </p>
<p>With runtime polymorphism based on method overriding, the decision as to 
which version of a method will be executed is based on</p>
<ul>
	<li>the actual type of the object whose reference is stored in the reference 
	variable, and </li>
	<li><strong>not</strong> on the type of the reference variable on which the 
	method is called. </li>
</ul>
<p><a href="#answer03">Answer 3</a> </p>

<h2><a name="question04">Question 4</a></h2>
<p>True or False? Given: Runtime polymorphism based on class inheritance 
requires that the type of the reference variable be a superclass of the class 
from which the object <em>(on which the method will be called)</em> is 
instantiated. The type of the reference variable must also be a class that 
either <strong><em>defines or inherits</em></strong> the method that will 
ultimately be called on the object. </p>
<p><a href="#answer04">Answer 4</a> </p>

<h2><a name="question05">Question 5</a></h2>
<p>True or False? Polymorphism manifests itself in Java in the form of multiple 
methods having different names.</p>
<p><a href="#answer05">Answer 5</a></p>

<hr/>

<p>Additional review questions with answers are provided in the appendix to this 
eBook. It is highly recommended that you study that material also.</p>





<hr/>





<h1><a name="Answers">Answers</a></h1>


<h2><a name="answer05">Answer 5</a></h2>
<p>False</p>
<p>Polymorphism manifests itself in Java in the form of multiple methods having 
the same name. </p>
<p><a href="#question05">Back to Question 5</a> </p>
<h2><a name="answer04">Answer 4</a> </h2>
<p>True </p>
<p><a href="#question04">Back to Question 4</a> </p>
<h2><a name="answer03">Answer 3</a> </h2>
<p>True </p>
<p><a href="#question03">Back to Question 3</a> </p>
<h2><a name="answer02">Answer 2</a></h2>
<p>False</p>
<p>Overloaded methods must have the same name, but different formal argument 
lists than the methods that they overload.<span class="auto-style2"> They may 
have the same or a different return type.</span></p>
<p><a href="#question02">Back to Question 2</a> </p>


<h2><a name="answer01">Answer 1</a> </h2>
<p>False</p>
<p>Overridden methods must have the same name, same return type, and same formal 
argument list<span class="auto-style2"><a href="#answer01"> </a> as the methods 
that they override.</span> </p>
<p><a href="#question01">Back to Question 1</a> </p>

<h1><a name="Miscellaneous">Miscellaneous</a></h1>
<p>This section contains a variety of miscellaneous information. </p>

<div class="a"><strong>Housekeeping material</strong>
			<ul>
				<li>Author: Prof. Richard G. Baldwin</li>
				<li>Chapter name: Java1612r Review: Runtime Polymorphism through 
				Class Inheritance</li>
				<li>File: Java1612r.htm </li>
				<li>Published: 03/28/20</li>
			</ul>
</div>



<p>-end- </p>


</body>
</html>
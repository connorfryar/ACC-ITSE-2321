<!--
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<title>Jb0240r</title>
<style type="text/css">
a:link {color:#0000ff;}
a:visited {color:#cc00cc;}
a:active {color:#ff0000;}
p{color:black;}
h1{color:green}
h2{color: purple}
h3{color: gray}
b{color: #000000}
strong{color: #000000}
blockquote{color: purple}
ul{color: maroon}
ol{color: maroon}
table{border: 1px solid black}
th{border: 1px solid black}
a:hover {
	color: #cc0000;
	font-weight: bold;
	text-decoration: none;
}
.auto-style1 {
	text-align: center;
}
div.a {
  border: 2px solid black;
}
</style>
</head>

<body style="font-family: Arial,Helvetica,sans-serif;font-size: 12pt; background-color: #FEFFF0;"
>
<h1 class="auto-style1">Jb0240r Review: Arrays and Strings</h1>


<h1 class="style1">Table of Contents</h1>
<ul>
	<li><a href="#Preface">Preface</a></li>
	<li><a href="#Questions">Questions</a>
	<ul>
		<li><a href="#question01">1</a>, <a href="#question02">2</a>,
		<a href="#question03">3</a>, <a href="#question04">4</a>,
		<a href="#question05">5</a>, <a href="#question06">6</a>,
		<a href="#question07">7</a>, <a href="#question08">8</a>,
		<a href="#question09">9</a>, <a href="#question10">10</a>, 
		<a href="#question11">11</a>, <a href="#question12">12</a>, 
		<a href="#question13">13</a>, 
		<a href="#question14">14</a>, 
		<a href="#question15">15</a>,
		<a href="#question16">16</a>,
		<a href="#question17">17</a>, 
		<a href="#question18">18</a></li>
	</ul>
	</li>
	<li><a href="#Listings">Listings</a></li>
	<li><a href="#Answers">Answers</a></li>
	<li><a href="#Miscellaneous">Miscellaneous</a></li>
</ul>
<h1><a name="Preface">Preface</a></h1>
<p>This chapter contains review questions and answers keyed to the chapter titled 
<em>Jb0240: Java OOP: Arrays and Strings. </em> </p>
<p>The questions and the answers are connected by hyperlinks to make it easy for 
you to navigate from the question to the answer and back again.</p>
<h1><a name="Questions">Questions</a></h1>

<h2><a name="question01">Question 1</a><b>. </b> </h2>
<p>True or false? Arrays and Strings are true objects. If false, explain why. </p>
<p><a href="#answer01">Answer 1</a> </p>

<h2><a name="question02">Question 2</a></h2>
<p>True or false? It is easy to write outsides the bounds of a <strong>String</strong> 
or an array. If false, explain why. </p>
<p><a href="#answer02">Answer 2</a> </p>

<h2><a name="question03">Question 3</a> </h2>
<p>You must declare a variable capable of holding a reference to an array object 
before you can use it. In declaring the variable, you must provide two important 
pieces of information. What are they? </p>
<p><a href="#answer03">Answer 3</a> </p>

<h2><a name="question04">Question 4</a></h2>
<p>Provide code fragments that illustrate the two different syntaxes that can be 
used to declare a variable capable of holding a reference to an array object 
that will store data of type int. </p>
<p><a href="#answer04">Answer 4</a> </p>

<h2><a name="question05">Question 5</a></h2>
<p>True or false? When you declare a variable capable of holding a reference to 
an array object, the memory required to contain the array object is automatically 
allocated. If false, explain why and show how memory can be allocated. </p>
<p><a href="#answer05">Answer 5</a></p>

<h2><a name="question06">Question 6</a></h2>
<p>True or false? It is required that you simultaneously declare the name of the 
variable and cause memory to be allocated to contain the array object in a single 
statement. If false, explain why and show code fragments to illustrate your 
answer. </p>
<p><a href="#answer06">Answer 6</a> </p>

<h2><a name="question07">Question 7</a></h2>
<p>True or false? Array indices always begin with 1. If false, explain why. </p>
<p><a href="#answer07">Answer 7</a></p>

<h2><a name="question08">Question 8</a> </h2>
<p>What is the name of the property of arrays that can be accessed to determine 
the number of elements in the array? Provide a sample code fragment that 
illustrates the use of this property. </p>
<p><a href="#answer08">Answer 8</a> </p>

<h2><a name="question09">Question 9</a></h2>
<p>What types of data can be stored in array objects? </p>
<p><a href="#answer09">Answer 9</a> </p>

<h2><a name="question10">Question 10</a></h2>
<p>True or false? Just as in other languages, when you create a 
multi-dimensional array, the secondary arrays must all be of the same size. If 
false, explain your answer. Then provide a code fragment that illustrates your 
answer or refer to a sample program in <em>Jb0240: Java OOP: Arrays and Strings</em> that illustrates your answer.</p>
<p><a href="#answer10">Answer 10</a></p>
	
<h2><a name="question11">Question 11</a></h2>
<p>True or false? Just as in other languages, when declaring a two-dimensional 
array, it is necessary to declare the size of the secondary dimension when the 
array is declared. If false, explain your answer. Then provide a code fragment 
that illustrates your answer or refer to a sample program in
<em>Jb0240: Java OOP: Arrays and Strings</em> 
that illustrates your answer.</p>
<p><a href="#answer11">Answer 11</a></p>
	
<h2><a name="question12">Question 12</a></h2>
<p>True or false? Java allows you to assign one array to another. Explain what 
happens when you do this. Then provide a code fragment that illustrates your 
answer or refer to a sample program in <em>Jb0240: Java OOP: Arrays and Strings</em> that illustrates your answer.</p>
<p><a href="#answer12">Answer 12</a></p>
	
<h2><a name="question13">Question 13</a></h2>
<p>Give a brief description of the concept of a string and list the names 
of two classes used to implement strings? </p>
<p><a href="#answer13">Answer 13</a></p>
	
<h2><a name="question14">Question 14</a></h2>
<p>What is the syntax that is used to create a literal string? Provide a code 
fragment to illustrate your answer. </p>
<p><a href="#answer14">Answer 14</a></p>
	
<h2><a name="question15">Question 15</a></h2>
<p>Explain the difference between objects of types <strong>String</strong> and
<strong>StringBuffer</strong>. </p>
<p><a href="#answer15">Answer 15</a></p>
	
<h2><a name="question16">Question 16</a></h2>
<p>Provide a code fragment that illustrates how to concatenate strings. </p>
<p><a href="#answer16">Answer 16</a></p>

<h2><a name="question17">Question 17</a></h2>
<p>Provide a code fragment that declares and instantiates an array object 
capable of storing references to two <strong>String</strong> objects. Explain what happens when this code 
fragment is executed. Then show a code fragment that will allocate memory for 
the actual <strong>String</strong> objects. </p>
<p><a href="#answer17">Answer 17</a></p>

<h2><a name="question18">Question 18</a></h2>
<p>Write a Java
application that illustrates the creation and manipulation 
of a two-dimensional array with the sub arrays being of 
different lengths.

Also cause your application to illustrate that an attempt
to access an array element out of bounds results in an 
exception being thrown.  Catch and process the exception.

<em>(Yes, I know you haven't learned how to catch exceptions yet but do some 
research and give it a try.)</em> Display a termination message with your name.</p>
<p><a href="#answer18">Answer 18</a></p>








<h1><a name="Listings">Listings</a></h1>
<ul>
	<li><a href="#Listing_1">Listing 1</a>. Listing for Answer 18.</li>
</ul>

<hr/>

<p>Additional review questions with answers are provided in the appendix to this 
eBook. It is highly recommended that you study that material also.</p>
<hr/>
<h1><a name="Answers">Answers</a></h1>


<h2><a name="answer18">Answer 18</a></h2>
<!--``1List01-->
<div class="a"><a name="Listing_1">Listing 1</a>. Listing for Answer 18.
<pre>
class SampProg10 { //define the controlling class
  public static void main(String[] args){ //define main 
    //Declare a two-dimensional array with a size of 3 on 
    // the primary dimension but with different sizes on 
    // the secondary dimension.
    //Secondary size not specified
    int[][] myArray = new int[3][];
    myArray[0] = new int[2];//secondary size is 2
    myArray[1] = new int[3];//secondary size is 3
    myArray[2] = new int[4];//secondary size is 4

    //Fill the array with data
    for(int i = 0; i &lt; 3; i++){
      for(int j = 0; j &lt; myArray[i].length; j++){
        myArray[i][j] = i * j;
      }//end inner loop
    }//end outer loop

    //Display data in the array
    for(int i = 0; i &lt; 3; i++){
      for(int j = 0; j &lt; myArray[i].length; j++){
        System.out.print(myArray[i][j]);
      }//end inner loop
      System.out.println();
    }//end outer loop

    //Attempt to access an out-of-bounds array element
    try{
      System.out.println(
                  &quot;Attempt to access array out of bounds&quot;);
      myArray[4][0] = 7;
    }catch(ArrayIndexOutOfBoundsException e){
      System.out.println(e);
    }//end catch
   
    System.out.println(&quot;Terminating, Dick Baldwin&quot;);     

  }//end main
}//End SampProg10 class.  Note no semicolon required
</pre>

</div><!--``2-->
<p><a href="#question18">Back to Question 18</a> </p>

<h2><a name="answer17">Answer 17</a></h2>
<p>The following statement declares and instantiates an array object capable of 
storing references to two <strong>String</strong> objects.</p>



<div class="a">				<pre>
String[] myArrayOfStringReferences = new String[2];</pre>
</div>	<p>Note however, that this array object doesn&#39;t contain the actual string 
	data. Rather, it simply sets aside memory for storage of two references to 
	<strong>String</strong> objects. No memory has been set aside to store the characters that make up 
	the individual strings. You must allocate the memory for the actual <strong>
	String</strong> objects separately using code similar to the following.</p>



<div class="a">				<pre>
myArrayOfStringReferences[0] = new String(
                   &quot;This is the first string.&quot;);
myArrayOfStringReferences[1] = new String(
                  &quot;This is the second string.&quot;);</pre>
</div><p><a href="#question17">Back to Question 17</a> </p>

<h2><a name="answer16">Answer 16</a></h2>
<p>Java supports string concatenation using the overloaded + operator as shown 
in the following code fragment: </p>



<div class="a">				<pre>
&quot;My variable has a value of &quot; + myVar + 
&quot; at this point in the program.&quot;</pre>
</div><p><a href="#question16">Back to Question 16</a> </p>



<h2><a name="answer15">Answer 15</a></h2>
<p><strong>String</strong> objects cannot be modified once they have been 
created. <strong>StringBuffer</strong> objects can be modified </p>
<p><a href="#question15">Back to Question 15</a> </p>


<h2><a name="answer14">Answer 14</a></h2>
<p>The Java compiler considers a series of characters surrounded by quotation 
marks to be a literal string, as in the following code fragment: </p>



<div class="a">				<pre>
&quot;This is a literal string in Java.&quot;</pre>
</div><p><a href="#question14">Back to Question 14</a> </p>


<h2><a name="answer13">Answer 13</a></h2>
<p>A string is commonly considered to be a sequence of characters stored in 
memory and accessible as a unit. Java implements strings using the <strong>
String</strong> class and the <strong>StringBuffer</strong> class. </p>
<p><a href="#question13">Back to Question 13</a> </p>


<h2><a name="answer12">Answer 12</a></h2>
<p>Java allows you to assign one array to another. When you do this, you are 
simply making another copy of the reference to the same data in memory. Then you 
have two references to the same data in memory. This is illustrated in the 
program named <strong>array02.java</strong> in
<em>Jb0240: Java OOP: Arrays and Strings.</em></p>
<p><a href="#question12">Back to Question 12</a> </p>

<h2><a name="answer11">Answer 11</a></h2>
<p>False. When declaring a two-dimensional array, it is not necessary to declare 
the size of the secondary dimension when the array is declared. Declaration of 
the size of each sub-array can be deferred until later as illustrated in the 
program named <strong>array01.java</strong> in
<em>Jb0240: Java OOP: Arrays and Strings.</em></p>
<p><a href="#question11">Back to Question 11</a> </p>


<h2><a name="answer10">Answer 10</a></h2>
<p>False. Java can be used to produce multi-dimensional arrays that can be 
viewed as an array of arrays. However, the secondary arrays need not all be of 
the same size. See the program named <strong>array01.java</strong> in
<em>Jb0240: Java OOP: Arrays and Strings.</em></p>
<p><a href="#question10">Back to Question 10</a> </p>



<h2><a name="answer09">Answer 9</a> </h2>
<p>Array objects can contain any Java data type including primitive values, references 
to ordinary objects, and references to other array objects.</p>
<p><a href="#question09">Back to Question 9</a> </p>
<h2><a name="answer08">Answer 8</a> </h2>
<p>All array objects have a <strong>length</strong> property that can be accessed to determine 
the number of elements in the array as shown below.</p>



<div class="a">				<pre>
for(int cnt = 0; cnt &lt; myArray.length; cnt++) 
  myArray[cnt] = cnt;</pre>
</div><p><a href="#question08">Back to Question 8</a> </p>
<h2><a name="answer07">Answer 7</a> </h2>
<p>False. Array indices always begin with 0. </p>
<p><a href="#question07">Back to Question 7</a> </p>

<h2><a name="answer06">Answer 6</a></h2>
<p>False. While it is possible to simultaneously declare the name of the 
variable 
and cause memory to be allocated to contain the array object, it is not necessary to 
combine these two processes. You can execute one statement to declare the 
variable 
and another statement to cause the memory for the array object to be allocated as shown below.</p>



<div class="a">				<pre>
int[] myArray;
.
.
.
myArray = new int[25];</pre>
</div><p><a href="#question06">Back to Question 6</a> </p>


<h2><a name="answer05">Answer 5</a></h2>
<p>False. As with other objects. the declaration of the variable does not 
allocate memory to contain the array object. Rather it simply allocates memory to 
contain a reference to the array object. Memory to contain the array object must 
be allocated from dynamic memory using statements such as the following.</p>



<div class="a">				<pre>
int[] myArray = new int[15];
int myArray[] = new int[25];
int[] myArray = {1,2,3,4,5}</pre>
</div><p><a href="#question05">Back to Question 5</a> </p>
<h2><a name="answer04">Answer 4</a> </h2>



<div class="a">				<pre>
int[] myArray;
int myArray[];</pre>
</div><p><a href="#question04">Back to Question 4</a> </p>
<h2><a name="answer03">Answer 3</a> </h2>
<p>In declaring the variable, you must provide two important pieces of 
information:</p>
<ul>
	<li>the name of the variable </li>
	<li>the type of the variable, which indicates the type of data to be stored in the array</li>
</ul>
<p><a href="#question03">Back to Question 3</a> </p>
<h2><a name="answer02">Answer 2</a></h2>
<p>False. Java has a true array type and a true <strong>String</strong> type 
with protective features to prevent your program from writing outside the memory 
bounds of the array or the <strong>String</strong>. </p>
<p><a href="#question02">Back to Question 2</a> </p>


<h2><a name="answer01">Answer 1</a> </h2>
<p>True.</p>
<p><a href="#question01">Back to Question 1</a> </p>

<h1><a name="Miscellaneous">Miscellaneous</a></h1>
<p>This section contains a variety of miscellaneous information. </p>

<div class="a"><p>Housekeeping material </p>
			<ul>
				<li>Author: Prof. Richard G. Baldwin</li>
				<li>Chapter name: Jb0240r Review: Arrays and Strings</li>
				<li>File: Jb0240r.htm </li>
				<li>Originally published: 1997</li>
				<li>Published at cnx.org: 11/26/12</li>
				<li>Revised: 03/01/20</li>
			</ul>
</div>

	<p>-end- </p>


</body>
</html>